#!/usr/bin/env node
'use strict';
const ora = require('ora');
const { displayResults } = require('../lib/output/cli-output');
const { isAllInSupportWindow } = require('../lib/project/mulitple-projects');
const { DEFAULT_SUPPORT_MESSAGE } = require('../lib/output/messages');
const { generateCsv } = require('../lib/output/csv-output');
const setupProject = require('../lib/project/setup-project');

(async function main(cli) {
  if (cli.input.length === 0) {
    cli.showHelp(1);
  } else {
    const projectPaths = cli.input;

    const spinner = ora('working').start();
    let result;
    try {
      result = await isAllInSupportWindow(projectPaths, setupProject, spinner);
      if (result.isInSupportWindow === false) {
        process.exitCode = 1;
      }
    } finally {
      spinner.stopAndPersist({
        symbol: 'âœ¨'
      });
    }

    if (cli.flags.json && result) {
      console.log(
        JSON.stringify(
          result,
          null,
          2,
        ),
      );
    } else if(cli.flags.csv && result) {
      generateCsv(projectPaths, result, DEFAULT_SUPPORT_MESSAGE())
    } else {
      displayResults(result, cli.flags, DEFAULT_SUPPORT_MESSAGE());
    }
  }
})(
  require('meow')(require('../lib/help'), {
    flags: {
      verbose: {
        type: 'boolean',
        alias: 'd',
      },
      json: {
        type: 'boolean',
        alias: 'j',
      },
      unsupported: {
        type: 'boolean',
        alias: 'u',
      },
      supported: {
        type: 'boolean',
        alias: 's',
      },
      expiring: {
        type: 'boolean',
        alias: 'e',
      },
    },
  }),
);
